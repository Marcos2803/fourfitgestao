// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fourfit.sistema_gestao.Context;

#nullable disable

namespace fourfit.sistema_gestao.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240808213447_DbUnica")]
    partial class DbUnica
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Account.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SobreNome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.AulaExperimental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHExperimental")
                        .HasColumnType("date");

                    b.Property<int>("HorariosId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HorariosId");

                    b.HasIndex("UserId");

                    b.ToTable("AulaExperimental", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.AvaliacaoFisica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Abdomen")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("Altura")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("AlunosId")
                        .HasColumnType("int");

                    b.Property<decimal?>("AntebracoD")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("AntebracoE")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("BicepsContraidoD")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("BicepsContraidoE")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("BicepsRelaxadoD")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("BicepsRelaxadoE")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("Cintura")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("Costa")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("CoxaD")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("CoxaE")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("DataAvaliacao")
                        .HasColumnType("date");

                    b.Property<decimal?>("GorduraVisceral")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<int?>("IdadeCorporal")
                        .HasColumnType("int");

                    b.Property<decimal?>("Imc")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("MassaMagra")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("PanturrilhaD")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("PanturrilhaE")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("Peitoral")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("PercentualGordura")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("Quadril")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("TaxaMetabolica")
                        .IsRequired()
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("AlunosId");

                    b.ToTable("AvaliacaoFisica", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.Checkins", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunosId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCheckin")
                        .HasColumnType("date");

                    b.Property<int>("HorariosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlunosId");

                    b.HasIndex("HorariosId");

                    b.ToTable("Checkins", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.EntidadeAlunos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNacimento")
                        .HasColumnType("date");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("Numero")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.Exercicios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exercicios");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.Horarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Dia")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<TimeSpan>("HoraFim")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<int>("LimiteAlunos")
                        .HasColumnType("int");

                    b.Property<int>("ModalidadesId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessoresId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("ModalidadesId");

                    b.HasIndex("ProfessoresId");

                    b.ToTable("Horarios", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.Mensalidades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunosId")
                        .HasColumnType("int");

                    b.Property<int>("ContasBancariasId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInicialPlano")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataPagamento")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<int>("FormaPagamentoId")
                        .HasColumnType("int");

                    b.Property<string>("MesReferente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanoId")
                        .HasColumnType("int");

                    b.Property<string>("StatusPagamentos")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<decimal?>("ValorMatricula")
                        .IsRequired()
                        .HasColumnType(" decimal(18, 2)");

                    b.Property<string>("ValorMensalidade")
                        .IsRequired()
                        .HasColumnType(" varchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("AlunosId");

                    b.HasIndex("ContasBancariasId");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("PlanoId");

                    b.ToTable("Mensalidades", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.Modalidades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AceitaCheckin")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanosId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("PlanosId");

                    b.ToTable("Modalidades", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.Parq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPreenchimento")
                        .HasColumnType("date");

                    b.Property<bool>("DesmaiaOuSenteTontura")
                        .HasColumnType("bit");

                    b.Property<bool>("DorNoPeitoAoSeExercitar")
                        .HasColumnType("bit");

                    b.Property<bool>("MotivoFisicoOuDeSaude")
                        .HasColumnType("bit");

                    b.Property<bool>("ProblemaCardiaco")
                        .HasColumnType("bit");

                    b.Property<bool>("ProblemaOssosOuArticulacoes")
                        .HasColumnType("bit");

                    b.Property<bool>("TomaMedicamentosPressaoCardiaco")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Parq", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.PersonalRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunosId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPR")
                        .HasColumnType("date");

                    b.Property<int>("ExerciciosId")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("PesoPR")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("AlunosId");

                    b.HasIndex("ExerciciosId");

                    b.ToTable("PersonalRecord", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.TipoPlano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.Property<int>("DiaPorSemana")
                        .HasColumnType("int");

                    b.Property<int>("DuracaoDia")
                        .HasColumnType("int");

                    b.Property<int>("DuracaoMes")
                        .HasColumnType("int");

                    b.Property<string>("NomePlano")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("ValorPlano")
                        .HasColumnType(" decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("TipoPlano", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Financas.ContasBancarias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bancos")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("ContasBancarias", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Financas.Despesas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContasBancariasId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("FormaPagamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("StatusPagamentos")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("TipoDespesasId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorDespesa")
                        .HasColumnType(" decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ContasBancariasId");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("TipoDespesasId");

                    b.ToTable("Despesas", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Financas.FormaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("FormaPagamento", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Financas.Fornecedores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("varchar(18)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NomeFornecedor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Financas.Impostos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeImposto")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Impostos", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Financas.Investimentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContasBancariasId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("FormaPagamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("StatusPagamentos")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("ValorInvestido")
                        .HasColumnType(" decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ContasBancariasId");

                    b.HasIndex("FormaPagamentoId");

                    b.ToTable("Investimentos", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Financas.TipoDespesas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColaboradoresId")
                        .HasColumnType("int");

                    b.Property<int>("FornecedoresId")
                        .HasColumnType("int");

                    b.Property<int>("ImpostosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradoresId");

                    b.HasIndex("ImpostosId");

                    b.ToTable("TipoDespesas", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Profission.EntidadeColaboradores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Cpf")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataNacimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Colaboradores", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Profission.EntidadeProfessores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Cpf")
                        .HasColumnType("bigint");

                    b.Property<string>("Cref")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataNacimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Professores", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Store.ControleEstoque.Categorias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Store.ControleEstoque.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstoqueMinimo")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ControleEstoque", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Store.ControleEstoque.Produtos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriasId")
                        .HasColumnType("int");

                    b.Property<int>("EstoqueId")
                        .HasColumnType("int");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("PrecoCusto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecoVenda")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriasId");

                    b.HasIndex("EstoqueId");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Store.Venda.Pagamentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContasBancariasId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataPagamento")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<decimal?>("Desconto")
                        .IsRequired()
                        .HasColumnType(" decimal(18, 2)");

                    b.Property<int>("FormaPagamentoId")
                        .HasColumnType("int");

                    b.Property<string>("StatusPagamentos")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("Troco")
                        .HasColumnType(" decimal(18, 2)");

                    b.Property<decimal>("ValorComDesconto")
                        .HasColumnType(" decimal(18, 2)");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType(" decimal(18, 2)");

                    b.Property<decimal>("ValorVenda")
                        .HasColumnType(" decimal(18, 2)");

                    b.Property<int>("VendasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContasBancariasId");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("VendasId");

                    b.ToTable("Pagamentos", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Store.Venda.VendaItens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProdutosId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("VendasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutosId");

                    b.HasIndex("VendasId");

                    b.ToTable("VendaItens", (string)null);
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Store.Venda.Vendas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("date");

                    b.Property<string>("StatusPagamentos")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vendas", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Account.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Account.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Account.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Account.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.AulaExperimental", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Alunos.Horarios", "Horarios")
                        .WithMany("AulaExperimental")
                        .HasForeignKey("HorariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Account.User", "User")
                        .WithMany("AulaExperimental")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Horarios");

                    b.Navigation("User");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.AvaliacaoFisica", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Alunos.EntidadeAlunos", "Alunos")
                        .WithMany("AvaliacoesFisicas")
                        .HasForeignKey("AlunosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.Checkins", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Alunos.EntidadeAlunos", "Alunos")
                        .WithMany("Checkins")
                        .HasForeignKey("AlunosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Alunos.Horarios", "Horarios")
                        .WithMany("Checkins")
                        .HasForeignKey("HorariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alunos");

                    b.Navigation("Horarios");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.EntidadeAlunos", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Account.User", "User")
                        .WithMany("Alunos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.Horarios", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Alunos.Modalidades", "Modalidades")
                        .WithMany("Horarios")
                        .HasForeignKey("ModalidadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Profission.EntidadeProfessores", "Professores")
                        .WithMany("Horarios")
                        .HasForeignKey("ProfessoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modalidades");

                    b.Navigation("Professores");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.Mensalidades", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Alunos.EntidadeAlunos", "Alunos")
                        .WithMany("Mensalidades")
                        .HasForeignKey("AlunosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Financas.ContasBancarias", "ContasBancarias")
                        .WithMany("Mensalidades")
                        .HasForeignKey("ContasBancariasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Financas.FormaPagamento", "FormaPagamento")
                        .WithMany("Mensalidades")
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Alunos.TipoPlano", "Planos")
                        .WithMany("Mensalidades")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alunos");

                    b.Navigation("ContasBancarias");

                    b.Navigation("FormaPagamento");

                    b.Navigation("Planos");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.Modalidades", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Alunos.TipoPlano", "Planos")
                        .WithMany("Modalidades")
                        .HasForeignKey("PlanosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planos");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.Parq", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Alunos.EntidadeAlunos", "Alunos")
                        .WithMany("Parq")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.PersonalRecord", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Alunos.EntidadeAlunos", "Alunos")
                        .WithMany("PersonalRecord")
                        .HasForeignKey("AlunosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Alunos.Exercicios", "Exercicios")
                        .WithMany("PersonalRecord")
                        .HasForeignKey("ExerciciosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alunos");

                    b.Navigation("Exercicios");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Financas.Despesas", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Financas.ContasBancarias", "ContasBancarias")
                        .WithMany("Despesas")
                        .HasForeignKey("ContasBancariasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Financas.FormaPagamento", "FormaPagamento")
                        .WithMany("Despesas")
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Financas.TipoDespesas", "TipoDespesas")
                        .WithMany("Despesas")
                        .HasForeignKey("TipoDespesasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContasBancarias");

                    b.Navigation("FormaPagamento");

                    b.Navigation("TipoDespesas");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Financas.Investimentos", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Financas.ContasBancarias", "ContasBancarias")
                        .WithMany("Investimentos")
                        .HasForeignKey("ContasBancariasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Financas.FormaPagamento", "FormaPagamento")
                        .WithMany("Investimentos")
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContasBancarias");

                    b.Navigation("FormaPagamento");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Financas.TipoDespesas", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Financas.Fornecedores", "Fornecedores")
                        .WithMany("TipoDespesas")
                        .HasForeignKey("ColaboradoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Profission.EntidadeColaboradores", "Colaboradores")
                        .WithMany("TipoDespesas")
                        .HasForeignKey("ColaboradoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Financas.Impostos", "Impostos")
                        .WithMany("TipoDespesas")
                        .HasForeignKey("ImpostosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaboradores");

                    b.Navigation("Fornecedores");

                    b.Navigation("Impostos");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Profission.EntidadeColaboradores", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Account.User", "User")
                        .WithMany("colaboradores")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Profission.EntidadeProfessores", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Account.User", "User")
                        .WithMany("Professores")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Store.ControleEstoque.Produtos", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Store.ControleEstoque.Categorias", "Categorias")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Store.ControleEstoque.Estoque", "Estoque")
                        .WithMany("Produtos")
                        .HasForeignKey("EstoqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorias");

                    b.Navigation("Estoque");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Store.Venda.Pagamentos", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Financas.ContasBancarias", "ContasBancarias")
                        .WithMany("Pagamentos")
                        .HasForeignKey("ContasBancariasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Financas.FormaPagamento", "FormaPagamento")
                        .WithMany("Pagamentos")
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Store.Venda.Vendas", "Vendas")
                        .WithMany("Pagamentos")
                        .HasForeignKey("VendasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContasBancarias");

                    b.Navigation("FormaPagamento");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Store.Venda.VendaItens", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Store.ControleEstoque.Produtos", "Produtos")
                        .WithMany("VendaItens")
                        .HasForeignKey("ProdutosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Store.Venda.Vendas", "vendas")
                        .WithMany("VendaItens")
                        .HasForeignKey("VendasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produtos");

                    b.Navigation("vendas");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Store.Venda.Vendas", b =>
                {
                    b.HasOne("fourfit.sistema_gestao.Domain.Entities.Account.User", "User")
                        .WithMany("Vendas")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Account.User", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("AulaExperimental");

                    b.Navigation("Professores");

                    b.Navigation("Vendas");

                    b.Navigation("colaboradores");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.EntidadeAlunos", b =>
                {
                    b.Navigation("AvaliacoesFisicas");

                    b.Navigation("Checkins");

                    b.Navigation("Mensalidades");

                    b.Navigation("Parq");

                    b.Navigation("PersonalRecord");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.Exercicios", b =>
                {
                    b.Navigation("PersonalRecord");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.Horarios", b =>
                {
                    b.Navigation("AulaExperimental");

                    b.Navigation("Checkins");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.Modalidades", b =>
                {
                    b.Navigation("Horarios");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Alunos.TipoPlano", b =>
                {
                    b.Navigation("Mensalidades");

                    b.Navigation("Modalidades");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Financas.ContasBancarias", b =>
                {
                    b.Navigation("Despesas");

                    b.Navigation("Investimentos");

                    b.Navigation("Mensalidades");

                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Financas.FormaPagamento", b =>
                {
                    b.Navigation("Despesas");

                    b.Navigation("Investimentos");

                    b.Navigation("Mensalidades");

                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Financas.Fornecedores", b =>
                {
                    b.Navigation("TipoDespesas");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Financas.Impostos", b =>
                {
                    b.Navigation("TipoDespesas");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Financas.TipoDespesas", b =>
                {
                    b.Navigation("Despesas");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Profission.EntidadeColaboradores", b =>
                {
                    b.Navigation("TipoDespesas");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Profission.EntidadeProfessores", b =>
                {
                    b.Navigation("Horarios");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Store.ControleEstoque.Categorias", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Store.ControleEstoque.Estoque", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Store.ControleEstoque.Produtos", b =>
                {
                    b.Navigation("VendaItens");
                });

            modelBuilder.Entity("fourfit.sistema_gestao.Domain.Entities.Store.Venda.Vendas", b =>
                {
                    b.Navigation("Pagamentos");

                    b.Navigation("VendaItens");
                });
#pragma warning restore 612, 618
        }
    }
}
